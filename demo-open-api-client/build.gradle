import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'org.openapi.generator' version '7.3.0'
    id 'maven-publish'
}

group = 'ru.rocketx.demo'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.1'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.2'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.1'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
}


def generatedDir = "$buildDir/generated-sources"

ext {
    apiBaseUrl = "http://localhost:8080"
}

tasks.register('generateClientApi', GenerateTask) {
    generatorName.set('java')
    configOptions.set([
            library: 'resttemplate',
            openApiNullable: 'false',
            useJakartaEe: 'true'
    ])
    inputSpec.set("$projectDir/src/main/resources/api-client.yaml")
    invokerPackage.set("ru.rocketx.generated.client")
    modelPackage.set("ru.rocketx.generated.model")
    apiPackage.set("ru.rocketx.generated.client.api")
    outputDir.set(generatedDir)
}

tasks.register('generateInternalApi', GenerateTask) {
    generatorName.set("spring")
    inputSpec.set("$projectDir/src/main/resources/api-internal.yaml")
    outputDir.set(generatedDir)
    apiPackage.set("ru.rocketx.generated.internal.api")
    modelPackage.set("ru.rocketx.generated.model")
    ignoreFileOverride.set("$projectDir/.openapi-generator-ignore")
    configOptions.set([
            interfaceOnly: "true",
            skipDefaultInterface: "true",
            reactive: "true",
            generateModel: "true",
            generateApi: "true",
            additionalModelTypeAnnotations: "@lombok.Builder(toBuilder = true)\n@lombok.RequiredArgsConstructor\n@lombok.AllArgsConstructor\n@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true)",
            generatedConstructorWithRequiredArgs: "false",
            openApiNullable: "false",
            useSpringBoot3: "true",
            useTags: "true",
    ])
}

tasks.named("compileJava") {
    dependsOn(generateClientApi, generateInternalApi)
}

sourceSets.main.java.srcDir "${generatedDir}/src/main/java/ru/rocketx/generated"

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

bootJar {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.name
            version = project.version
        }
    }
    repositories {
        mavenLocal()
    }
}
